function mdCell(){function a(a){return a.find("md-select").attr("md-container-class","md-table-select"),c}function b(){}function c(a,b,c,d){function e(){return i.columns[f()]}function f(){return Array.prototype.indexOf.call(b.parent().children(),b[0])}var g=b.find("md-select"),h=d.shift(),i=d.shift();(g.length||c.ngClick)&&b.addClass("clickable").on("click",function(a){a.stopPropagation(),g.length&&g[0].click()}),h.getTable=i.getElement,a.$watch(e,function(a){a&&(a.numeric?b.addClass("numeric"):b.removeClass("numeric"))})}return{controller:b,compile:a,require:["mdCell","^^mdTable"],restrict:"E"}}function mdColumn(a){function b(b,c,d,e){function f(){var d=angular.element('<md-icon class="sort-icon">&#xE5D8;</md-icon>');a(d.attr("ng-class","getDirection()"))(b),c.hasClass("numeric")?c.prepend(d):c.append(d)}function g(){for(var a=c.find("md-icon"),b=0;b<a.length;b++){var d=a.eq(b);if(d.hasClass("sort-icon"))return d.remove()}}function h(){g(),c.off("click",m)}function i(){f(),c.on("click",m)}function j(){return Array.prototype.indexOf.call(c.parent().children(),c[0])}function k(){return b.orderBy?p.order===b.orderBy||p.order==="-"+b.orderBy:!1}function l(){return d.hasOwnProperty("mdNumeric")&&""===d.mdNumeric?!0:b.numeric}function m(){b.$applyAsync(function(){k()?p.order="asc"===b.getDirection()?"-"+b.orderBy:b.orderBy:p.order="asc"===b.getDirection()?b.orderBy:"-"+b.orderBy})}function n(a,b){o.columns[a]=b,b.numeric?c.addClass("numeric"):c.removeClass("numeric")}var o=e.shift(),p=e.shift();b.getDirection=function(){return k()?p.order==="-"+b.orderBy?"desc":"asc":d.hasOwnProperty("mdDesc")?"desc":"asc"},b.$watch(k,function(a){a?c.addClass("active"):c.removeClass("active")}),b.$watch(j,function(a){n(a,{numeric:l()})}),b.$watch(l,function(a){n(j(),{numeric:a})}),b.$watch("orderBy",function(a){a?i():h()})}return{link:b,require:["^^mdTable","^^mdHead"],restrict:"E",scope:{numeric:"=?mdNumeric",orderBy:"@?mdOrderBy"}}}function $mdEditDialog(a,b,c,d,e,f,g,h,i){function j(b,e){var g=f.$new(),h=a(b)(g),i=d.createBackdrop(g,"md-edit-dialog-backdrop");if(e.controller){var j=angular.extend(e.locals,{$element:h,$scope:g});e.controllerAs?(g[e.controllerAs]={},e.bindToController?angular.extend(g[e.controllerAs],e.scope):angular.extend(g,e.scope)):angular.extend(g,e.scope),e.bindToController?c.invoke(e.controller,g[e.controllerAs],j):c.instantiate(e.controller,j)}else angular.extend(g,e.scope);var k;if(e.disableScroll&&(k=d.disableScrollAround(h,p)),p.prepend(i).append(h.addClass("md-whiteframe-1dp")),m(h,e.targetEvent.target),e.focusOnOpen){var l=d.findFocusTarget(h);l&&l.focus()}h.on("$destroy",function(){i.remove(),angular.isFunction(k)&&k()}),i.on("click",function(){h.remove()})}function k(a,b,c,d){function e(a){return d.editDialog.$invalid?b.reject():angular.isFunction(c)?b.when(c(a)):b.resolve(a)}d.dismiss=function(){a.remove()},d.submit=function(a){e(a).then(function(){d.dismiss()})}}function l(a){return e(function(b,c){function d(a){c("Unexpected template value. Epected a string; recieved a "+a+".")}var e=a.template;if(e)return angular.isString(e)?b(e):d(typeof e);if(a.templateUrl){if(e=g.get(a.templateUrl))return b(e);var f=function(a){return b(a)},i=function(){return c("Error retrieving template from URL.")};return h(a.templateUrl).then(f,i)}c("Template not provided.")})}function m(a,b){var c=angular.element(b).controller("mdCell").getTable(),d=function(){return a.prop("clientHeight")},e=function(){return{width:h(),height:d()}},g=function(){var a=c.parent();return"MD-TABLE-CONTAINER"===a.prop("tagName")?a[0].getBoundingClientRect():c[0].getBoundingClientRect()},h=function(){return a.prop("clientWidth")},j=function(){var c=e(),d=b.getBoundingClientRect(),f=g();c.width>f.right-d.left?a.css("left",f.right-c.width+"px"):a.css("left",d.left+"px"),c.height>f.bottom-d.top?a.css("top",f.bottom-c.height+"px"):a.css("top",d.top+1+"px"),a.css("minWidth",d.width+"px")},k=f.$watch(h,j),l=f.$watch(d,j);i.addEventListener("resize",j),a.on("$destroy",function(){k(),l(),i.removeEventListener("resize",j)})}function n(a,b){function c(){var a=b.type;for(var c in b.validators)a+=" "+c+'="'+b.validators[c]+'"';return a}return{controller:"editDialog",locals:{$q:e,save:b.save},scope:{cancel:b.cancel||"Cancel",messages:b.messages,model:b.modelValue,ok:b.ok||"Save",placeholder:b.placeholder,title:b.title,size:a},template:'<md-edit-dialog><div layout="column" class="content"><div ng-if="size === \'large\'" class="md-title">{{$editDialog.title || \'Edit\'}}</div><form name="editDialog" layout="column" ng-submit="submit(model)"><md-input-container md-no-float><input name="input" ng-model="model" md-autofocus placeholder="{{placeholder}} "'+c()+'><div ng-messages="editDialog.input.$error"><div ng-repeat="(key, message) in messages" ng-message="{{key}}">{{message}}</div></div></md-input-container></form></div><div ng-if="size === \'large\'" layout="row" layout-align="end" class="actions"><md-button class="md-primary" ng-click="dismiss()">{{cancel}}</md-button><md-button class="md-primary" ng-click="submit(model)">{{ok}}</md-button></div></md-edit-dialog>'}}var o=this,p=angular.element(b.prop("body")),q={clickOutsideToClose:!0,disableScroll:!0,escToClose:!0,focusOnOpen:!0};return k.$inject=["$element","$q","save","$scope"],o.show=function(a){if(a=angular.extend({},q,a),!a.targetEvent)return console.error("options.targetEvent is required to align the dialog with the table cell.");if("MD-CELL"!==a.targetEvent.target.tagName)return console.error("The event target must be a table cell.");if(a.bindToController&&!a.controllerAs)return console.error("You must define options.controllerAs when options.bindToController is true.");var b=l(a);b.then(function(b){j(b,a)}),b["catch"](function(a){console.error(a)})},o.small=function(a){o.show(angular.extend({},a,n("small",a)))},o.large=function(a){o.show(angular.extend({},a,n("large",a)))},o}function mdHead(a){function b(){}function c(b,c,d,e){function f(){for(var a=c.children(),b=0;b<a.length-1;b++)a.eq(b).prepend("<md-column></md-column>");a.eq(a.length-1).prepend(g())}function g(){var c=angular.element("<md-checkbox></md-checkbox>");return c.attr("aria-label","Select All"),c.attr("ng-click","toggleAll()"),c.attr("ng-checked","allSelected()"),angular.element("<md-column>").append(a(c)(b))}function h(a){for(var b=0,d=c.next().children();b<d.length;b++){var e=d.eq(b);if(!e.hasClass("ng-leave")&&!a(e,e.controller("mdSelect")))return!1}return!0}function i(a){for(var b=0,d=c.next().children();b<d.length;b++){var e=d.eq(b);e.hasClass("ng-leave")||a(e,e.controller("mdSelect"))}}function j(){c.find("md-checkbox").parent().remove()}b.allSelected=function(){return h(function(a,b){return b.disabled||b.isSelected()})},b.selectAll=function(){i(function(a,b){b.isSelected()||b.select()})},b.toggleAll=function(){return b.allSelected()?b.unSelectAll():b.selectAll()},b.unSelectAll=function(){i(function(a,b){b.isSelected()&&b.deselect()})},b.$watch(e.enableSelection,function(a){a?f():j()})}return{bindToController:!0,controller:b,controllerAs:"$mdHead",link:c,require:"^^mdTable",restrict:"E",scope:{order:"=?mdOrder"}}}function mdSelect(a){function b(){}function c(b,c,d,e){function f(){c.prepend(k())}function g(a){b.$applyAsync(function(){n.toggle(a)})}function h(){return d.hasOwnProperty("mdAutoSelect")&&""===d.mdAutoSelect?!0:n.autoSelect}function i(){l(),c.off("click",g)}function j(){f(),h()&&c.on("click",g)}function k(){var c=angular.element("<md-checkbox></md-checkbox>");return c.attr("aria-label","Select Row"),c.attr("ng-click","$mdSelect.toggle($event)"),c.attr("ng-checked","$mdSelect.isSelected()"),c.attr("ng-disabled","$mdSelect.disabled"),angular.element("<md-cell>").append(a(c)(b))}function l(){c.find("md-checkbox").parent().remove()}var m=e.shift(),n=e.shift();n.isSelected=function(){return n.isEnabled&&-1!==m.selected.indexOf(n.model)},n.select=function(){n.disabled||(m.selected.push(n.model),angular.isFunction(n.onSelect)&&n.onSelect(n.model,m.selected))},n.deselect=function(){m.selected.splice(m.selected.indexOf(n.model),1)},n.toggle=function(a){return a&&a.stopPropagation&&a.stopPropagation(),n.isSelected()?n.deselect():n.select()},b.$watch(m.enableSelection,function(a){n.isEnabled=a,n.isEnabled?j():i()}),b.$watch(n.isSelected,function(a){return a?c.addClass("md-selected"):c.removeClass("md-selected")})}return{bindToController:!0,controller:b,controllerAs:"$mdSelect",link:c,require:["^^mdTable","mdSelect"],restrict:"A",scope:{model:"=mdSelect",disabled:"=ngDisabled",onSelect:"=?mdOnSelect",autoSelect:"=mdAutoSelect"}}}function mdTable(){function a(a,b,c){var d=this;d.columns={},d.enableSelection=function(){return c.hasOwnProperty("mdRowSelect")&&""===c.mdRowSelect?!0:d.rowSelect},d.getElement=function(){return b},a.$watch(d.enableSelection,function(a){return a?b.addClass("md-row-select"):b.removeClass("md-row-select")})}return a.$inject=["$scope","$element","$attrs"],{bindToController:!0,controller:a,controllerAs:"$mdTable",restrict:"E",scope:{selected:"=ngModel",rowSelect:"=mdRowSelect"}}}function mdTablePagination(){function a(a){a.label||(a.label={0:"Rows per page:",1:"of"}),a.hasNext=function(){return a.page*a.limit<a.total},a.hasPrevious=function(){return a.page>1},a.max=function(){return a.hasNext()?a.page*a.limit:a.total},a.min=function(){return a.page*a.limit-a.limit},a.next=function(){a.page++},a.previous=function(){a.page--},a.$watch("limit",function(){a.limit*a.page>a.max()&&a.hasPrevious()&&a.previous()})}return{link:a,restrict:"E",scope:{label:"=?mdLabel",limit:"=mdLimit",page:"=mdPage",options:"=mdOptions",total:"@mdTotal"},templateUrl:"md-table-pagination.html"}}angular.module("md.data.table",["md.table.templates"]),angular.module("md.data.table").directive("mdCell",mdCell),angular.module("md.data.table").directive("mdColumn",mdColumn),mdColumn.$inject=["$compile"],angular.module("md.data.table").factory("$mdEditDialog",$mdEditDialog).controller("editDialog",["$element","$q","save","$scope",function(a,b,c,d){function e(a){return d.editDialog.$invalid?b.reject():angular.isFunction(c)?b.when(c(a)):b.resolve(a)}d.dismiss=function(){a.remove()},d.submit=function(a){e(a).then(function(){d.dismiss()})}}]),$mdEditDialog.$inject=["$compile","$document","$injector","$mdUtil","$q","$rootScope","$templateCache","$templateRequest","$window"],angular.module("md.data.table").directive("mdHead",mdHead),mdHead.$inject=["$compile"],angular.module("md.data.table").directive("mdSelect",mdSelect),mdSelect.$inject=["$compile"],angular.module("md.data.table").directive("mdTable",mdTable),angular.module("md.data.table").directive("mdTablePagination",mdTablePagination),angular.module("md.table.templates",["md-table-pagination.html"]),angular.module("md-table-pagination.html",[]).run(["$templateCache",function(a){"use strict";a.put("md-table-pagination.html",'<!-- <span class="label shrink" ng-if="pageSelect">{{paginationLabel.page}}</span>\n\n<md-select ng-if="pageSelect" ng-model="page" md-container-class="md-pagination-select" ng-change="onPageChange()" aria-label="Page Number">\n  <md-option ng-repeat="num in pages track by $index" ng-value="$index + 1">{{$index + 1}}</md-option>\n</md-select> -->\n\n<span class="label">{{label[0]}}</span>\n\n<md-select ng-model="limit" md-container-class="md-pagination-select" ng-change="onLimitChange()" aria-label="Rows" placeholder="{{options ? options[0] : 5}}">\n  <md-option ng-repeat="rows in options ? options : [5, 10, 15]" ng-value="rows">{{rows}}</md-option>\n</md-select>\n\n<span class="label">{{min() + 1}} - {{max()}} {{label[1]}} {{total}}</span>\n\n<!-- <md-button class="md-icon-button" type="button" ng-if="boundaryLinks" ng-click="first()" ng-disabled="!hasPrevious()" aria-label="First">\n  <md-icon>&#xE045;</md-icon>\n</md-button> -->\n<md-button class="md-icon-button" type="button" ng-click="previous()" ng-disabled="!hasPrevious()" aria-label="Previous">\n  <md-icon>&#xE408;</md-icon>\n</md-button>\n<md-button class="md-icon-button" type="button" ng-click="next()" ng-disabled="!hasNext()" aria-label="Next">\n  <md-icon>&#xE409;</md-icon>\n</md-button>\n<!-- <md-button class="md-icon-button" type="button" ng-if="boundaryLinks" ng-click="last()" ng-disabled="!hasNext()" aria-label="Last">\n  <md-icon>&#xE044;</md-icon>\n</md-button> -->')}]);